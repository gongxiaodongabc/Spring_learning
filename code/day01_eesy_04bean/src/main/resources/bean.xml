<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--把对象的创建交给spring管理-->
    <!--spring对bean的管理细节
        1.创建bean的三种方式
        2.bean对象的作用范围
        3.bean对象的生命周期
     -->
    <!--创建Bean的三种方式-->
    <!--第一种方式：使用默认构造函数创建，在bean标签中配置id和class属性后，且没有其他属性，采用默认构造函数创建bean对象 -->
    <!--<bean id="accountService" class="com.qmh.service.impl.AccountServiceImpl"></bean>-->

    <!--第二种方式，使用某个类中的方法创建对象，并存于spring容器-->
   <!-- <bean id="instanceFactory" class="com.qmh.factory.InstanceFactory"></bean>
    <bean id="accountService" factory-bean="instanceFactory" factory-method="getAccountService"></bean>-->

    <!--第三种方式： 使用工厂中的静态方法创建对象-->
    <!--<bean id="accountService" class="com.qmh.factory.StaticFactory" factory-method="getAccountService"></bean>-->

    <!--bean的作用范围调整 默认单例
        bean标签的scope属性：
            作用：用于指定bean的作用范围
            取值：
                singleton 单例（默认值）
                prototype 多例
                request 作用于web应用的请求范围
                session 作用于web应用的会话范围
                global-session 作用于集群环境的会话范围（全局会话范围），不是集群，则就是session
    -->
<!--    <bean id="accountService" class="com.qmh.service.impl.AccountServiceImpl" scope="prototype"></bean>-->
    <!--bean对象的生命周期
        单例对象
            出生：容器创建时对象出生
            活着：容器还在，对象一直活着
            死亡：容器销毁，对象死亡
        多例对象
            出生 当使用对象时，spring框架创建
            活着 对象使用过程中，活着
            死亡 对象被垃圾回收时
    -->
        <bean id="accountService" class="com.qmh.service.impl.AccountServiceImpl"
              scope="prototype" init-method="init" destroy-method="destory"></bean>
</beans>