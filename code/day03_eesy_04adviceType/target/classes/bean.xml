<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
        <!--配置spring的IOC，把service对象配置进来-->
        <bean id="accountService" class="com.qmh.service.impl.AccountServiceImpl"></bean>

        <!--配置Logger类-->
        <bean id="logger" class="com.qmh.utils.Logger"></bean>
        <!--配置AOP-->
        <aop:config>
            <!--配置切入点表达式 id用于指定表达式的唯一标志  expression用于指定表达式内容
                  此标签写在aop:aspect标签内部，只能在当前切面使用
                  还可以写在aop:aspect标签外部（上面），表示所有切面可用
                 -->
            <aop:pointcut id="ptl" expression=" execution( * com.qmh.service.impl.*.*(..))"/>
            <!--配置切面-->
            <aop:aspect id="logAdvice" ref="logger">
                <!--前置通知 在切入点方法执行之前执行-->
<!--                <aop:before method="beforePrintLog" pointcut-ref="ptl"></aop:before>-->

                <!--后置通知 在切入点方法正常执行之后执行-->
<!--                <aop:after-returning method="afterReturningPrintLog" pointcut-ref="ptl" ></aop:after-returning>-->

                <!--异常通知 在切入点方法产生异常之后执行-->
<!--                <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="ptl"></aop:after-throwing>-->

                <!--最终通知 无论切入点是否正常执行，都会执行-->
<!--                <aop:after method="afterPrintLog" pointcut-ref="ptl"></aop:after>-->

                <!--环绕通知-->
                <aop:around method="aroundPrintLog" pointcut-ref="ptl"></aop:around>
            </aop:aspect>
        </aop:config>


</beans>