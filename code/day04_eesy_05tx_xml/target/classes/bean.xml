<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        ">
    <!--配置业务层-->
    <bean id="accountService" class="com.qmh.service.impl.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"></property>
    </bean>

    <!--配置账户的持久层-->
    <bean id="accountDao" class="com.qmh.dao.impl.AccountDaoImpl_xml">
<!--        <property name="jdbcTemplate" ref="jdbcTemplate"></property>-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>


    <!--配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/eesy?serverTimezone=UTC"></property>
        <property name="username" value="root"></property>
        <property name="password" value="070622"></property>
    </bean>

    <!--spring 中基于XML的声明式事务控制配置步骤
        1.配置事务管理器
        2.配置事务通知
                此时需要导入事务的约束 tx名称空间和约束，同时也需要aop的
                使用tx:advice配置事务通知 id 唯一标识  transaction-manager 给事务通知提供一个事务管理器引用
        3.配置aop中的通用切入点表达式
        4.建立事务通知和切入点表达式的关系
        5.配置事务的属性
            在事务的通知tx:advice内部
    -->
    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--配置事务属性
            isolation 用于指定事务的隔离级别 默认DEFAULT表示数据库的默认隔离级别
            propagation:用于指定事务的传播行为，默认值时REQUIRED，表示一定会有事务，增删改的选择。查询方法可以选择SUPPORTS
            read-only: 用于指定事务是否只读，默认false, 查询可设置为true
            timeout：用于指定事务的超时时间，默认是-1
            rollback-for:用于指定一个异常，当产生该异常时，事务回滚，产生其他异常时，事务不回滚。默认情况下都回滚
            no-rollback-for 用于指定一个异常，当产生该异常时，事务不回滚，产生其他异常时，事务回滚。默认情况下都回滚
        -->
        <tx:attributes>
            <tx:method name="transfer" propagation="REQUIRED" read-only="false"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"></tx:method>
        </tx:attributes>
    </tx:advice>

    <!--配置aop-->
    <aop:config>
        <!--配置切入点表达式-->
        <aop:pointcut id="pt1" expression="execution(* com.qmh.service.impl.*.*(..))"/>
        <!--建立切入点表达式和事务通知对应关系-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>
    </aop:config>

</beans>